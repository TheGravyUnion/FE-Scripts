local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local RunService = game:GetService("RunService")

local originalCFrame = LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame

if LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit == true then
	LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit = false
end

task.wait()

LocalPlayer.Character:BreakJoints()
LocalPlayer.Character = nil

game:GetService("Workspace").DescendantAdded:Connect(function(Desc)
	if Desc.Name == "Animate" or Desc.Name == "Anima" then
		Desc.Enabled = false 
	end
end)

repeat task.wait() until LocalPlayer.Character ~= nil

RunService.Heartbeat:Wait()

local Character = LocalPlayer.Character
local Humanoid = Character:FindFirstChildOfClass("Humanoid") or Character:WaitForChild("Humanoid")
local Torso = Character:WaitForChild("Torso")
local RightShoulder = Torso:WaitForChild("Right Shoulder")
local LeftShoulder = Torso:WaitForChild("Left Shoulder")
local RightHip = Torso:WaitForChild("Right Hip")
local LeftHip = Torso:WaitForChild("Left Hip")
local Neck = Torso:WaitForChild("Neck")

local Pose = "Standing"

local toolAnim = "None"
local toolAnimTime = 0

task.spawn(function()
	repeat task.wait() until Character:FindFirstChild("HumanoidRootPart")
	Character.HumanoidRootPart.CFrame = originalCFrame
end)

Humanoid.Running:Connect(function(Speed)
	if Speed > 0 then
		Pose = "Running"
	else
		Pose = "Standing"
	end
end)

Humanoid.Jumping:Connect(function()
	Pose = "Jumping"
end)

Humanoid.FreeFalling:Connect(function()
	Pose = "FreeFall"
end)

Humanoid.FallingDown:Connect(function()
	Pose = "FallingDown"
end)

Humanoid.GettingUp:Connect(function()
	Pose = "GettingUp"
end)

Humanoid.PlatformStanding:Connect(function()
	Pose = "PlatformStanding"
end)

Humanoid.Climbing:Connect(function()
	Pose = "Climbing"
end)

Humanoid.Seated:Connect(function()
	Pose = "Seated"
end)

Humanoid.Died:Connect(function()
	Pose = "Dead"
end)

if Character:FindFirstChild("Animate") then
	Character.Animate.Enabled = false
end

if Character:FindFirstChild("Anima") then
	Character.Anima.Enabled = false
end

task.spawn(function()
	while Character.Parent ~= nil do
		local _, time = wait(0.1)
		local climbFudge = 0

		local amplitude = nil
		local frequency = nil
		local desiredAngle = nil

		if Pose == "Jumping" then
			RightShoulder.MaxVelocity = 0.5
			LeftShoulder.MaxVelocity = 0.5
			RightShoulder.DesiredAngle = 3.14
			LeftShoulder.DesiredAngle = -3.14
			RightHip.DesiredAngle = 0
			LeftHip.DesiredAngle = 0
		elseif Pose == "FreeFall" then
			RightShoulder.MaxVelocity = 0.5
			LeftShoulder.MaxVelocity = 0.5
			RightShoulder.DesiredAngle = 3.14
			LeftShoulder.DesiredAngle = -3.14
			RightHip.DesiredAngle = 0
			LeftHip.DesiredAngle = 0
		elseif Pose == "Seated" then
			local SeatPart = Humanoid.SeatPart
			if SeatPart ~= nil and SeatPart.ClassName == "Seat" then
				Humanoid.Sit = false
				RunService.Heartbeat:Wait()
				Humanoid.Sit = true
				Pose = "Seated"
				if SeatPart ~= nil then
					if not SeatPart:FindFirstChild("ClassicSitAnimationAttachment") then local CSA = Instance.new("Attachment") CSA.Name = "ClassicSitAnimationAttachment" CSA.Parent = SeatPart end
					if not Torso:FindFirstChild("SitBodyPosition") then local BP = Instance.new("BodyPosition") BP.Name = "SitBodyPosition" BP.MaxForce = Vector3.new(9e9, 9e9, 9e9) BP.P = 50000 BP.Parent = Torso end
					if not Torso:FindFirstChild("SitAlignOrientation") then local AO = Instance.new("AlignOrientation") AO.Name = "SitAlignOrientation" AO.RigidityEnabled = true AO.Attachment0 = Torso:FindFirstChild("NeckAttachment") AO.Attachment1 = SeatPart:FindFirstChild("ClassicSitAnimationAttachment") AO.Parent = Torso end
					local SBP = Torso:FindFirstChild("SitBodyPosition")
					if SBP ~= nil then
						SBP.Position = Torso.Position - Vector3.new(0, 0.15, 0)
					end
					Pose = "Seated"
				end
			end
			RightShoulder.MaxVelocity = 0.15
			LeftShoulder.MaxVelocity = 0.15
			RightShoulder.DesiredAngle = 3.14 /2
			LeftShoulder.DesiredAngle = -3.14 /2
			RightHip.DesiredAngle = 3.14 /2
			LeftHip.DesiredAngle = -3.14 /2
		elseif Pose == "Running" then
			RightShoulder.MaxVelocity = 0.15
			LeftShoulder.MaxVelocity = 0.15
			amplitude = 1
			frequency = 9
		elseif Pose == "Climbing" then
			RightShoulder.MaxVelocity = 0.5 
			LeftShoulder.MaxVelocity = 0.5
			amplitude = 1
			frequency = 9
			climbFudge = 3.14
		else
			amplitude = 0.1
			frequency = 1
		end

		if Pose ~= "Seated" then
			if Torso:FindFirstChild("SitBodyPosition") then
				Torso.SitBodyPosition:Destroy()
			end
			if Torso:FindFirstChild("SitAlignOrientation") then
				Torso.SitAlignOrientation:Destroy()
			end
			task.spawn(function()
				for _,v in ipairs(game:GetService("Workspace"):GetDescendants()) do
					if v.Name == "ClassicSitAnimationAttachment" or v.Name == "SitBodyPosition" or v.Name == "SitAlignOrientation" then
						v:Destroy()
					end
				end
			end)
		end

		if amplitude ~= nil and frequency ~= nil then
			desiredAngle = amplitude * math.sin(time * frequency)

			RightShoulder.DesiredAngle = desiredAngle + climbFudge
			LeftShoulder.DesiredAngle = desiredAngle - climbFudge
			RightHip.DesiredAngle = -desiredAngle
			LeftHip.DesiredAngle = -desiredAngle
		end

		local Tool = Character:FindFirstChildOfClass("Tool")
		local animStringValueObject
		if Tool ~= nil then
			for _,v in ipairs(Tool:GetChildren()) do
				if v.Name == "toolanim" and v.ClassName == "StringValue" then
					animStringValueObject = v
				end
			end
			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end
			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end
			if toolAnim == "None" then
				RightShoulder.DesiredAngle = 1.57
			elseif (toolAnim == "Slash") then
				RightShoulder.MaxVelocity = 0.5
				RightShoulder.DesiredAngle = 0
			elseif (toolAnim == "Lunge") then
				RightShoulder.MaxVelocity = 0.5
				LeftShoulder.MaxVelocity = 0.5
				RightHip.MaxVelocity = 0.5
				LeftHip.MaxVelocity = 0.5
				RightShoulder.DesiredAngle = 1.57
				LeftShoulder.DesiredAngle = 1.0
				RightHip.DesiredAngle = 1.57
				LeftHip.DesiredAngle = 1.0
			end
		else
			toolAnim = "None"
			toolAnimTime = 0
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if Torso ~= nil then
			Torso.CFrame *= CFrame.new(Vector3.new(0, 0, 0.0001))
			if Humanoid:GetState() == Enum.HumanoidStateType.Dead then
				break
			end
		else
			break
		end
	end
end)

task.spawn(function()
	while task.wait() do
		for _,v in ipairs(Humanoid:GetPlayingAnimationTracks()) do
			v:Stop()
		end
	end
end)
